// Mocks generated by Mockito 5.4.6 from annotations
// in stressbuster/test/screens/video_call_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:agora_rtc_engine/agora_rtc_engine.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;
import 'package:stressbuster/services/agora_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AgoraService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAgoraService extends _i1.Mock implements _i2.AgoraService {
  MockAgoraService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get defaultChannelName =>
      (super.noSuchMethod(
            Invocation.getter(#defaultChannelName),
            returnValue: _i3.dummyValue<String>(
              this,
              Invocation.getter(#defaultChannelName),
            ),
          )
          as String);

  @override
  int get defaultUid =>
      (super.noSuchMethod(Invocation.getter(#defaultUid), returnValue: 0)
          as int);

  @override
  bool get isInCall =>
      (super.noSuchMethod(Invocation.getter(#isInCall), returnValue: false)
          as bool);

  @override
  set onUserJoined(dynamic Function(int)? _onUserJoined) => super.noSuchMethod(
    Invocation.setter(#onUserJoined, _onUserJoined),
    returnValueForMissingStub: null,
  );

  @override
  set onUserOffline(dynamic Function(int)? _onUserOffline) =>
      super.noSuchMethod(
        Invocation.setter(#onUserOffline, _onUserOffline),
        returnValueForMissingStub: null,
      );

  @override
  set onFirstLocalVideoFrame(dynamic Function(int)? _onFirstLocalVideoFrame) =>
      super.noSuchMethod(
        Invocation.setter(#onFirstLocalVideoFrame, _onFirstLocalVideoFrame),
        returnValueForMissingStub: null,
      );

  @override
  set onFirstRemoteVideoFrame(
    dynamic Function(int)? _onFirstRemoteVideoFrame,
  ) => super.noSuchMethod(
    Invocation.setter(#onFirstRemoteVideoFrame, _onFirstRemoteVideoFrame),
    returnValueForMissingStub: null,
  );

  @override
  set onError(dynamic Function(int)? _onError) => super.noSuchMethod(
    Invocation.setter(#onError, _onError),
    returnValueForMissingStub: null,
  );

  @override
  _i4.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> joinDefaultChannel({required bool? isHost}) =>
      (super.noSuchMethod(
            Invocation.method(#joinDefaultChannel, [], {#isHost: isHost}),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> joinChannel({
    required String? channelName,
    required String? token,
    required int? uid,
    required _i5.ClientRoleType? role,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#joinChannel, [], {
              #channelName: channelName,
              #token: token,
              #uid: uid,
              #role: role,
            }),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> leaveChannel() =>
      (super.noSuchMethod(
            Invocation.method(#leaveChannel, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> toggleLocalVideo(bool? enabled) =>
      (super.noSuchMethod(
            Invocation.method(#toggleLocalVideo, [enabled]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> toggleLocalAudio(bool? enabled) =>
      (super.noSuchMethod(
            Invocation.method(#toggleLocalAudio, [enabled]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> switchCamera() =>
      (super.noSuchMethod(
            Invocation.method(#switchCamera, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
